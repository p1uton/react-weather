{"version":3,"sources":["common/functions.js","actions/types.js","actions/actions.js","Components/Error.js","Components/Search.js","Components/CitiesList.js","common/consts.js","Components/Day.js","Components/City.js","Components/CityContainer.js","Components/App.js","index.js","reducers/rootReducer.js"],"names":["dtToDateTime","dt","offset","localOffset","Date","getTimezoneOffset","date","toLocaleTimeString","hour","minute","toLocaleDateString","day","month","dtToDate","weekday","getCityByName","name","a","fetch","process","response","json","data","getCityByCoords","lat","lon","getWeather","city","ADD_CITY","REMOVE_CITY","SHOW_ERROR","HIDE_ERROR","SET_CITY","addCityAction","type","payload","showErrorAction","setCityAction","id","Error","dispatch","useDispatch","handleClick","className","role","style","onClick","Search","useState","cityName","setCityName","error","useSelector","state","handleSubmit","event","preventDefault","onSubmit","placeholder","value","onChange","target","CitiesList","cities","getLocationSuccess","position","coords","latitude","longitude","length","navigator","geolocation","getCurrentPosition","map","country","winds","Day","weather","deg","Math","round","wind_deg","temp","night","src","icon","alt","main","wind_speed","City","current","timezone_offset","daily","dayWeather","CityContainer","cityId","find","parseInt","setWeather","useEffect","undefined","fetchWeather","handleRemoveClick","removeCityAction","App","initialState","JSON","parse","localStorage","getItem","loadCities","store","createStore","action","sys","coord","filter","applyMiddleware","thunk","subscribe","setItem","stringify","saveCities","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f04af33b.chunk.js","sourcesContent":["export const loadCities = () => {\r\n  try {\r\n    const cities = JSON.parse(localStorage.getItem('cities'));\r\n    return null !== cities ? cities : [];\r\n  } catch {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const saveCities = cities => {\r\n  try {\r\n    localStorage.setItem('cities', JSON.stringify(cities));\r\n  } catch {\r\n  }\r\n};\r\n\r\nexport const dtToDateTime = (dt, offset) => {\r\n  const localOffset = (new Date().getTimezoneOffset()) * 60;\r\n  const date = new Date((dt + offset + localOffset) * 1000);\r\n  return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) + ', ' + date.toLocaleDateString([], { day: 'numeric', month: 'short' });\r\n};\r\n\r\nexport const dtToDate = (dt, offset) => {\r\n  const localOffset = (new Date().getTimezoneOffset()) * 60;\r\n  const date = new Date((dt + offset + localOffset) * 1000);\r\n  return date.toLocaleDateString([], { weekday: 'short', day: 'numeric', month: 'short' });\r\n};\r\n\r\nexport const getCityByName = async name => {\r\n  const response = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${name}&appid=${process.env.REACT_APP_APPID}`);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport const getCityByCoords = async (lat, lon) => {\r\n  const response = await fetch(`http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${process.env.REACT_APP_APPID}`);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport const getWeather = async city => {\r\n  const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${city.lat}&lon=${city.lon}&appid=${process.env.REACT_APP_APPID}&units=metric`);\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n\r\n","export const ADD_CITY = 'ADD_CITY';\r\nexport const REMOVE_CITY = 'REMOVE_CITY';\r\n\r\nexport const SHOW_ERROR = 'SHOW_ERROR';\r\nexport const HIDE_ERROR = 'HIDE_ERROR';\r\n\r\nexport const SET_CITY = 'SET_CITY';","import { getCityByCoords, getCityByName } from '../common/functions';\r\nimport { ADD_CITY, HIDE_ERROR, REMOVE_CITY, SET_CITY, SHOW_ERROR } from './types';\r\n\r\nexport const addCityByNameAction = name => {\r\n  return async dispatch => {\r\n    try {\r\n      const city = await getCityByName(name);\r\n      if ('id' in city) {\r\n        dispatch(addCityAction(city));\r\n      } else {\r\n        dispatch(showErrorAction());\r\n      }\r\n    } catch (error) {\r\n      dispatch(showErrorAction());\r\n    }\r\n  }\r\n};\r\n\r\nexport const addCityByCoordsAction = (lat, lon) => {\r\n  return async dispatch => {\r\n    try {\r\n      const city = await getCityByCoords(lat, lon);\r\n      if ('id' in city) {\r\n        dispatch(addCityAction(city));\r\n      } else {\r\n        dispatch(showErrorAction());\r\n      }\r\n    } catch (error) {\r\n      dispatch(showErrorAction());\r\n    }\r\n  }\r\n};\r\n\r\nexport const addCityAction = city => {\r\n  return {\r\n    type: ADD_CITY,\r\n    payload: city,\r\n  };\r\n};\r\n\r\nexport const removeCityAction = id => {\r\n  return {\r\n    type: REMOVE_CITY,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const showErrorAction = () => {\r\n  return {\r\n    type: SHOW_ERROR,\r\n  };\r\n}\r\n\r\nexport const hideErrorAction = () => {\r\n  return {\r\n    type: HIDE_ERROR,\r\n  };\r\n};\r\n\r\nexport const setCityAction = id => {\r\n  return {\r\n    type: SET_CITY,\r\n    payload: id,\r\n  };\r\n};","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { hideErrorAction } from '../actions/actions';\r\n\r\nexport const Error = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = () => {\r\n    dispatch(hideErrorAction());\r\n  };\r\n\r\n  return (\r\n    <div className=\"alert alert-danger\" role=\"alert\">\r\n      <span\r\n        style={{ 'float': 'right', 'cursor': 'pointer' }}\r\n        onClick={() => handleClick()}\r\n      >\r\n        &times;\r\n      </span>\r\n      City not found\r\n    </div>\r\n  );\r\n};","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addCityByNameAction } from '../actions/actions';\r\nimport { Error } from './Error';\r\n\r\nexport const Search = () => {\r\n  const [cityName, setCityName] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const error = useSelector(state => state.error);\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    dispatch(addCityByNameAction(cityName));\r\n    setCityName('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={event => handleSubmit(event)}>\r\n      <div className=\"input-group mb-3 pt-3\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"City\"\r\n          value={cityName}\r\n          onChange={event => setCityName(event.target.value)}\r\n        />\r\n        <button\r\n          className=\"btn btn-outline-secondary\"\r\n          type=\"submit\"\r\n        >\r\n          Add city\r\n        </button>\r\n      </div>\r\n      </form>\r\n      {\r\n        error\r\n          ? <Error />\r\n          : null\r\n      }\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addCityByCoordsAction, setCityAction } from '../actions/actions';\r\nimport { Search } from './Search';\r\n\r\nexport const CitiesList = () => {\r\n  const cities = useSelector(state => state.cities);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const getLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(getLocationSuccess);\r\n    }\r\n  };\r\n  \r\n  const getLocationSuccess = position => {\r\n    dispatch(addCityByCoordsAction(position.coords.latitude, position.coords.longitude));\r\n  };\r\n  \r\n  if (0 === cities.length) {\r\n    getLocation();\r\n  }\r\n\r\n  const handleClick = id => {\r\n    dispatch(setCityAction(id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"list-group\">\r\n      <Search />\r\n      {\r\n        cities.map(\r\n          city =>\r\n            <button\r\n              type=\"button\"\r\n              className=\"list-group-item list-group-item-action\"\r\n              key={city.id}\r\n              onClick={() => handleClick(city.id)}\r\n            >\r\n              {city.name}, {city.country}\r\n            </button>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n};","export const winds = {\r\n  '0': <span>&darr;</span>,\r\n  '45': <span>&#8601;</span>,\r\n  '90': <span>&larr;</span>,\r\n  '135': <span>&#8598;</span>,\r\n  '180': <span>&uarr;</span>,\r\n  '225': <span>&#8599;</span>,\r\n  '270': <span>&rarr;</span>,\r\n  '315': <span>&#8600;</span>,\r\n  '360': <span>&darr;</span>,\r\n};","import React from 'react';\r\nimport { winds } from '../common/consts';\r\nimport { dtToDate } from '../common/functions';\r\n\r\nexport const Day = ({ weather, offset }) => {\r\n  const deg = Math.round(weather.wind_deg / 45) * 45;\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ 'display': 'flex', 'justifyContent': 'space-between', 'alignItems': 'center' }}>\r\n        <div>\r\n          <span style={{ 'fontSize': '20px' }}>{dtToDate(weather.dt, offset)}</span>\r\n        </div>\r\n        <div>\r\n          {Math.round(weather.temp.day)}&deg;C / {Math.round(weather.temp.night)}&deg;C\r\n        </div>\r\n        <div style={{ 'display': 'flex', 'alignItems': 'center' }}>\r\n          <img\r\n            src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}.png`}\r\n            alt={weather.weather[0].main}\r\n          />\r\n          {weather.weather[0].main}\r\n        </div>\r\n        <div>\r\n          <span style={{ 'fontFamily': 'Arial' }}>{winds[deg]}</span> {Math.round(weather.wind_speed)} m/s\r\n        </div>\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport { winds } from '../common/consts';\r\nimport { dtToDateTime } from '../common/functions';\r\nimport { Day } from './Day';\r\n\r\nexport const City = ({ weather }) => {\r\n\r\n  const deg = Math.round(weather.current.wind_deg / 45) * 45;\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {dtToDateTime(weather.current.dt, weather.timezone_offset)}\r\n      </div>\r\n      <div style={{ 'display': 'flex', 'alignItems': 'center' }}>\r\n        <div style={{ 'fontSize': '48px' }}>\r\n          {Math.round(weather.current.temp)}&deg;C\r\n        </div>\r\n        <div>\r\n          <img\r\n            src={`http://openweathermap.org/img/wn/${weather.current.weather[0].icon}@2x.png`}\r\n            alt={weather.current.weather[0].main}\r\n          />\r\n        </div>\r\n        <div>\r\n          <div>\r\n            {weather.current.weather[0].main}\r\n          </div>\r\n          <div>\r\n            <span style={{ 'fontFamily': 'Arial' }}>{winds[deg]}</span> {Math.round(weather.current.wind_speed)} m/s\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      {weather.daily.map(dayWeather => <Day key={dayWeather.dt} weather={dayWeather} offset={weather.timezone_offset} />)}\r\n    </div>\r\n  );\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeCityAction, setCityAction } from '../actions/actions';\r\nimport { getWeather } from '../common/functions';\r\nimport { City } from './City';\r\n\r\nexport const CityContainer = () => {\r\n  const cityId = useSelector(state => state.cityId);\r\n\r\n  const city = useSelector(state => state.cities.find(city => parseInt(city.id) === parseInt(cityId)));\r\n\r\n  const [weather, setWeather] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchWeather() {\r\n      if (undefined !== city) {\r\n        const weather = await getWeather(city);\r\n        setWeather(weather);\r\n      }\r\n    }\r\n    fetchWeather();\r\n  }, [city]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleRemoveClick = id => {\r\n    dispatch(removeCityAction(id));\r\n    dispatch(setCityAction(null));\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    dispatch(setCityAction(null));\r\n  };\r\n\r\n  return (\r\n    <div className=\"pt-3\">\r\n      <div style={{ 'display': 'flex', 'justifyContent': 'space-between', 'alignItems': 'center' }}>\r\n        <button\r\n          className=\"btn btn-link\"\r\n          onClick={() => handleBackClick()}\r\n        >\r\n          &larr; Back\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={() => handleRemoveClick(cityId)}\r\n        >\r\n          Remove city\r\n        </button>\r\n      </div>\r\n      <hr />\r\n      <h1>{city.name}, {city.country}</h1>\r\n      {null !== weather ? <City weather={weather} /> : <div>Loading...</div>}\r\n    </div>\r\n  );\r\n};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { CitiesList } from './CitiesList';\nimport { CityContainer } from './CityContainer';\n\nexport const App = () => {\n  const cityId = useSelector(state => state.cityId);\n\n  return (\n    <div className=\"container\">\n      {\n        null !== cityId\n          ? <CityContainer />\n          : <CitiesList />\n      }\n    </div>\n  );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './Components/App';\nimport { rootReducer } from './reducers/rootReducer';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { loadCities, saveCities } from './common/functions';\n\nconst initialState = {\n  cities: loadCities(),\n  error: false,\n  cityId: null,\n};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  applyMiddleware(thunk)\n);\n\nstore.subscribe(() => {\n  saveCities(store.getState().cities);\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);","import { ADD_CITY, HIDE_ERROR, REMOVE_CITY, SET_CITY, SHOW_ERROR } from '../actions/types';\r\n\r\nexport const rootReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_CITY:\r\n      return {\r\n        ...state,\r\n        cities: [\r\n          ...state.cities,\r\n          {\r\n            id: action.payload.id,\r\n            name: action.payload.name,\r\n            country: action.payload.sys.country,\r\n            lat: action.payload.coord.lat,\r\n            lon: action.payload.coord.lon,\r\n          }\r\n        ],\r\n      };\r\n    case REMOVE_CITY:\r\n      return {\r\n        ...state,\r\n        cities: state.cities.filter(city => parseInt(city.id) !== parseInt(action.payload)),\r\n      };\r\n    case SHOW_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    case HIDE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: false,\r\n      };\r\n    case SET_CITY:\r\n      return {\r\n        ...state,\r\n        cityId: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};"],"sourceRoot":""}